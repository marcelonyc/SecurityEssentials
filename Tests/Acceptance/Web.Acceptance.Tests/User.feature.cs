// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SecurityEssentials.Acceptance.Tests
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("User")]
    [NUnit.Framework.CategoryAttribute("CheckForErrors")]
    public partial class UserFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "CheckForErrors"};
        
#line 1 "User.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "", "User", "\tIn order to users can effectively access the system\r\n\tAs a user, or admin\r\n\tI wa" +
                    "nt to manage user permissions and data", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
#line 8
 testRunner.Given("I delete all cookies from the cache", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.And("I clear down the database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And("I have the standard set of lookups", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Title",
                        "FirstName",
                        "LastName",
                        "Password",
                        "SecurityQuestion",
                        "SecurityAnswer",
                        "IsAdmin",
                        "Approved",
                        "Enabled",
                        "WorkTelephoneNumber",
                        "HomeTelephoneNumber",
                        "MobileTelephoneNumber",
                        "Town",
                        "Postcode",
                        "SkypeName"});
            table67.AddRow(new string[] {
                        "user1@test.net",
                        "Mr",
                        "User",
                        "One",
                        "zasXX8576jFj123",
                        "What is the name of your first pet?",
                        "Beatrix",
                        "false",
                        "true",
                        "true",
                        "0123",
                        "0456",
                        "0789",
                        "town",
                        "postcode",
                        "skype"});
            table67.AddRow(new string[] {
                        "user2@test.net",
                        "Mrs",
                        "User",
                        "Two",
                        "hdfhjreyYURTR123",
                        "What is the name of your first pet?",
                        "Pettles",
                        "false",
                        "true",
                        "true",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table67.AddRow(new string[] {
                        "admin@test.net",
                        "Mr",
                        "Admin",
                        "User",
                        "654dfhjeritjJDFK",
                        "What is the name of your first pet?",
                        "Beatrix",
                        "true",
                        "true",
                        "true",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 11
 testRunner.And("the following users are setup in the database:", ((string)(null)), table67, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("As an admin I can manage my users")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        public void AsAnAdminICanManageMyUsers()
        {
            string[] tagsOfScenario = new string[] {
                    "PAT"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an admin I can manage my users", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 18
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 19
 testRunner.Given("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 20
 testRunner.And("I maximise the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table68.AddRow(new string[] {
                            "UserName",
                            "admin@test.net"});
                table68.AddRow(new string[] {
                            "Password",
                            "654dfhjeritjJDFK"});
#line 23
 testRunner.And("I enter the following login data:", ((string)(null)), table68, "And ");
#line hidden
#line 27
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("I select Admin -> Manage Users from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("I am navigated to the \'Manage Users\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.When("I click edit on the user with name \'user1@test.net\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
 testRunner.Then("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 33
 testRunner.And("I can edit the username", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table69.AddRow(new string[] {
                            "UserName",
                            "user1@test.net"});
                table69.AddRow(new string[] {
                            "Title",
                            "Mr"});
                table69.AddRow(new string[] {
                            "FirstName",
                            "User"});
                table69.AddRow(new string[] {
                            "LastName",
                            "One"});
                table69.AddRow(new string[] {
                            "HomeTelephoneNumber",
                            "0456"});
                table69.AddRow(new string[] {
                            "WorkTelephoneNumber",
                            "0123"});
                table69.AddRow(new string[] {
                            "MobileTelephoneNumber",
                            "0789"});
                table69.AddRow(new string[] {
                            "SkypeName",
                            "skype"});
                table69.AddRow(new string[] {
                            "Town",
                            "town"});
                table69.AddRow(new string[] {
                            "Postcode",
                            "postcode"});
                table69.AddRow(new string[] {
                            "Approved",
                            "true"});
                table69.AddRow(new string[] {
                            "EmailVerified",
                            "true"});
                table69.AddRow(new string[] {
                            "Enabled",
                            "true"});
#line 34
 testRunner.And("The following user edit information is displayed:", ((string)(null)), table69, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can change my account information")]
        [NUnit.Framework.CategoryAttribute("PAT")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        public void ICanChangeMyAccountInformation()
        {
            string[] tagsOfScenario = new string[] {
                    "PAT",
                    "Smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can change my account information", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 51
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                            "UserName",
                            "FirstName",
                            "LastName",
                            "Password",
                            "SecurityQuestion",
                            "SecurityAnswer",
                            "IsAdmin"});
                table70.AddRow(new string[] {
                            "user3@test.net",
                            "Patient",
                            "User",
                            "zasXX8576jFj123",
                            "What is the name of your first pet?",
                            "Beatrix",
                            "false"});
#line 52
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table70, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                            "Description"});
#line 55
 testRunner.And("the following user roles are setup in the system for user \'user3@test.net\'", ((string)(null)), table71, "And ");
#line hidden
#line 57
 testRunner.Given("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 58
 testRunner.And("I maximise the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table72.AddRow(new string[] {
                            "UserName",
                            "user3@test.net"});
                table72.AddRow(new string[] {
                            "Password",
                            "zasXX8576jFj123"});
#line 61
 testRunner.And("I enter the following login data:", ((string)(null)), table72, "And ");
#line hidden
#line 65
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("I select Admin -> Manage Account from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.And("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table73.AddRow(new string[] {
                            "Title",
                            "Mrs"});
                table73.AddRow(new string[] {
                            "FirstName",
                            "Sarah"});
                table73.AddRow(new string[] {
                            "LastName",
                            "Page"});
                table73.AddRow(new string[] {
                            "WorkTelephoneNumber",
                            "0123456789"});
                table73.AddRow(new string[] {
                            "HomeTelephoneNumber",
                            "0987654321"});
                table73.AddRow(new string[] {
                            "MobileTelephoneNumber",
                            "0778412457"});
                table73.AddRow(new string[] {
                            "Town",
                            "Leeds"});
                table73.AddRow(new string[] {
                            "PostCode",
                            "LS10 1EF"});
                table73.AddRow(new string[] {
                            "SkypeName",
                            "SarahPage"});
#line 69
 testRunner.And("I enter the following change account information data:", ((string)(null)), table73, "And ");
#line hidden
#line 80
 testRunner.When("I submit the manage account form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 81
 testRunner.Then("A confirmation message \'Your account information has been saved\' is shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
 testRunner.And("I cannot edit the username", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                            "Description"});
                table74.AddRow(new string[] {
                            "User Logged On"});
#line 83
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table74, "And ");
#line hidden
                TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                            "UserName",
                            "HashStrategy",
                            "Enabled",
                            "Approved",
                            "EmailVerified",
                            "FirstName",
                            "LastName",
                            "TelNoWork",
                            "TelNoHome",
                            "TelNoMobile",
                            "Town",
                            "PostCode",
                            "SkypeName"});
                table75.AddRow(new string[] {
                            "admin@test.net",
                            "Pbkdf210001Iterations",
                            "True",
                            "True",
                            "True",
                            "Admin",
                            "User",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""});
                table75.AddRow(new string[] {
                            "user1@test.net",
                            "Pbkdf210001Iterations",
                            "True",
                            "True",
                            "True",
                            "User",
                            "One",
                            "0123",
                            "0456",
                            "0789",
                            "town",
                            "postcode",
                            "skype"});
                table75.AddRow(new string[] {
                            "user2@test.net",
                            "Pbkdf210001Iterations",
                            "True",
                            "True",
                            "True",
                            "User",
                            "Two",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""});
                table75.AddRow(new string[] {
                            "user3@test.net",
                            "Pbkdf210001Iterations",
                            "True",
                            "True",
                            "True",
                            "Sarah",
                            "Page",
                            "0123456789",
                            "0987654321",
                            "0778412457",
                            "Leeds",
                            "LS10 1EF",
                            "SarahPage"});
#line 86
 testRunner.And("I have the following users in the system:", ((string)(null)), table75, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can add the administrator privilege")]
        public void ICanAddTheAdministratorPrivilege()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can add the administrator privilege", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 93
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 94
 testRunner.Given("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 95
 testRunner.And("I maximise the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 97
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table76.AddRow(new string[] {
                            "UserName",
                            "admin@test.net"});
                table76.AddRow(new string[] {
                            "Password",
                            "654dfhjeritjJDFK"});
#line 98
 testRunner.And("I enter the following login data:", ((string)(null)), table76, "And ");
#line hidden
#line 102
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 103
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.And("I select Admin -> Manage Users from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.And("I am navigated to the \'Manage Users\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 106
 testRunner.And("I click edit on the user with name \'user1@test.net\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.And("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
 testRunner.And("The text indicating the user is a system administrator is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.And("I click Make Administrator Privilege", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 110
 testRunner.And("I am navigated to the \'Make Admin\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table77.AddRow(new string[] {
                            "UserName",
                            "user1@test.net"});
#line 111
 testRunner.And("I am shown the following make admin details:", ((string)(null)), table77, "And ");
#line hidden
#line 114
 testRunner.When("I click confirm make admin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 115
 testRunner.Then("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table78.AddRow(new string[] {
                            "UserName",
                            "user1@test.net"});
#line 116
 testRunner.And("The following user edit information is displayed:", ((string)(null)), table78, "And ");
#line hidden
#line 119
 testRunner.And("The text indicating the user is a system administrator is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                            "Description"});
                table79.AddRow(new string[] {
                            "User Logged On"});
                table79.AddRow(new string[] {
                            "User was made a system admin by admin@test.net"});
#line 120
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table79, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("I can remove the administrator privilege")]
        public void ICanRemoveTheAdministratorPrivilege()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("I can remove the administrator privilege", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 125
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                            "UserName",
                            "FirstName",
                            "LastName",
                            "Password",
                            "SecurityQuestion",
                            "SecurityAnswer",
                            "IsAdmin",
                            "Approved",
                            "Enabled"});
                table80.AddRow(new string[] {
                            "user3@test.net",
                            "User",
                            "Three",
                            "zasXX8576jFj123",
                            "What is the name of your first pet?",
                            "Beatrix",
                            "true",
                            "true",
                            "true"});
#line 126
 testRunner.Given("the following users are setup in the database:", ((string)(null)), table80, "Given ");
#line hidden
#line 129
 testRunner.And("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
 testRunner.And("I maximise the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 132
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table81.AddRow(new string[] {
                            "UserName",
                            "admin@test.net"});
                table81.AddRow(new string[] {
                            "Password",
                            "654dfhjeritjJDFK"});
#line 133
 testRunner.And("I enter the following login data:", ((string)(null)), table81, "And ");
#line hidden
#line 137
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 138
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 139
 testRunner.And("I select Admin -> Manage Users from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 140
 testRunner.And("I am navigated to the \'Manage Users\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 141
 testRunner.And("I click edit on the user with name \'user3@test.net\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.And("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 143
 testRunner.And("The text indicating the user is a system administrator is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 144
 testRunner.And("I click Remove Administrator Privilege", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 145
 testRunner.And("I am navigated to the \'Remove Admin\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table82.AddRow(new string[] {
                            "UserName",
                            "user3@test.net"});
#line 146
 testRunner.And("I am shown the following remove admin details:", ((string)(null)), table82, "And ");
#line hidden
#line 149
 testRunner.When("I click confirm remove admin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 150
 testRunner.Then("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
 testRunner.And("I can edit the username", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table83.AddRow(new string[] {
                            "UserName",
                            "user3@test.net"});
#line 152
 testRunner.And("The following user edit information is displayed:", ((string)(null)), table83, "And ");
#line hidden
#line 155
 testRunner.And("The text indicating the user is a system administrator is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                            "Description"});
                table84.AddRow(new string[] {
                            "User Logged On"});
                table84.AddRow(new string[] {
                            "User had administrator privileges removed by admin@test.net"});
#line 156
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table84, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("As an admin I can reset a user\'s password")]
        public void AsAnAdminICanResetAUsersPassword()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an admin I can reset a user\'s password", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 161
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 162
 testRunner.Given("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 163
 testRunner.And("I maximise the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 164
 testRunner.And("I have 0 entry(ies) in the password history table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 165
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 166
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table85.AddRow(new string[] {
                            "UserName",
                            "admin@test.net"});
                table85.AddRow(new string[] {
                            "Password",
                            "654dfhjeritjJDFK"});
#line 167
 testRunner.And("I enter the following login data:", ((string)(null)), table85, "And ");
#line hidden
#line 171
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 172
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
 testRunner.And("I select Admin -> Manage Users from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 174
 testRunner.And("I am navigated to the \'Manage Users\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
 testRunner.And("I click edit on the user with name \'user1@test.net\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 176
 testRunner.And("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 177
 testRunner.And("I click Reset Password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 178
 testRunner.And("I am navigated to the \'Reset Password\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table86.AddRow(new string[] {
                            "UserName",
                            "user1@test.net"});
#line 179
 testRunner.And("I am shown the following reset password details:", ((string)(null)), table86, "And ");
#line hidden
#line 182
 testRunner.When("I click confirm reset password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 183
 testRunner.Then("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table87.AddRow(new string[] {
                            "UserName",
                            "user1@test.net"});
#line 184
 testRunner.And("The following user edit information is displayed:", ((string)(null)), table87, "And ");
#line hidden
#line 187
 testRunner.And("I have 1 entry(ies) in the password history table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 188
 testRunner.And("the user \'user1@test.net\' has the password expiry date set", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                            "Description"});
                table88.AddRow(new string[] {
                            "User Logged On"});
                table88.AddRow(new string[] {
                            "User had password reset sent out via email by admin@test.net"});
#line 189
 testRunner.And("I have the following user logs in the system:", ((string)(null)), table88, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("As an admin I can delete a user")]
        public void AsAnAdminICanDeleteAUser()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an admin I can delete a user", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 195
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
this.FeatureBackground();
#line hidden
#line 196
 testRunner.Given("I navigate to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 197
 testRunner.And("I maximise the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 198
 testRunner.And("I click the login link in the navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 199
 testRunner.And("I am navigated to the \'Login\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table89.AddRow(new string[] {
                            "UserName",
                            "admin@test.net"});
                table89.AddRow(new string[] {
                            "Password",
                            "654dfhjeritjJDFK"});
#line 200
 testRunner.And("I enter the following login data:", ((string)(null)), table89, "And ");
#line hidden
#line 204
 testRunner.And("I click the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 205
 testRunner.And("I am navigated to the \'Landing\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 206
 testRunner.And("I select Admin -> Manage Users from the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 207
 testRunner.And("I am navigated to the \'Manage Users\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                            "UserName",
                            "FullName",
                            "TelNoMobile",
                            "Enabled",
                            "Approved"});
                table90.AddRow(new string[] {
                            "admin@test.net",
                            "Admin User",
                            "",
                            "True",
                            "True"});
                table90.AddRow(new string[] {
                            "user2@test.net",
                            "User Two",
                            "",
                            "True",
                            "True"});
                table90.AddRow(new string[] {
                            "user1@test.net",
                            "User One",
                            "0789",
                            "True",
                            "True"});
#line 208
 testRunner.And("I am shown the following users:", ((string)(null)), table90, "And ");
#line hidden
#line 213
 testRunner.And("I click edit on the user with name \'user1@test.net\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 214
 testRunner.And("I am navigated to the \'User Edit\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 215
 testRunner.And("I click Delete User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 216
 testRunner.And("I am navigated to the \'Delete User\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table91.AddRow(new string[] {
                            "UserName",
                            "user1@test.net"});
#line 217
 testRunner.And("I am shown the following delete user details:", ((string)(null)), table91, "And ");
#line hidden
#line 220
 testRunner.When("I click confirm delete user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 221
 testRunner.Then("I am navigated to the \'manage users\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                            "UserName",
                            "FullName",
                            "TelNoMobile",
                            "Enabled",
                            "Approved"});
                table92.AddRow(new string[] {
                            "admin@test.net",
                            "Admin User",
                            "",
                            "True",
                            "True"});
                table92.AddRow(new string[] {
                            "user2@test.net",
                            "User Two",
                            "",
                            "True",
                            "True"});
#line 222
 testRunner.And("I am shown the following users:", ((string)(null)), table92, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
