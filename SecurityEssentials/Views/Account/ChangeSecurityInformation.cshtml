@model SecurityEssentials.ViewModel.ChangeSecurityInformationViewModel
@{
    ViewBag.Title = "Change Security Information";
    ViewBag.Active = "Admin";
}

<h1>@ViewBag.Title.</h1>

@using (Html.BeginForm("ChangeSecurityInformationAsync", "Account", FormMethod.Post, new { @class = "container", role = "form", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true)
    if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-info">@Model.ErrorMessage</div>
    }
    <div class="row">
        <div class="col-md-12">
            You're logged in as <strong>@User.Identity.Name</strong><br />
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            Re-enter your password, then your new security information to complete this action.
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col-md-4">@Html.LabelFor(m => m.Password, new { @class = "control-label" })</div>
        <div class="col-md-4">@Html.PasswordFor(m => m.Password, new { @class = "form-control", autocomplete = "off", maxlength = 20 })</div>
        <div class="col-md-4">@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })</div>
    </div>
    <div class="row">
        <div class="col-md-12">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col-md-4">@Html.LabelFor(m => m.SecurityQuestionLookupItemId, new { @class = "control-label" })</div>
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.SecurityQuestionLookupItemId, Model.SecurityQuestions, new { @class = "form-control", autocomplete = "off" })
        </div>
        <div class="col-md-4">@Html.ValidationMessageFor(model => model.SecurityQuestionLookupItemId, "", new { @class = "text-danger" })</div>
    </div>
    <div class="row">
        <div class="col-md-12">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col-md-4">@Html.LabelFor(m => m.SecurityAnswer, new { @class = "control-label" })</div>
        <div class="col-md-4">@Html.PasswordFor(m => m.SecurityAnswer, new { @class = "form-control", autocomplete = "off", maxlength = 40 })</div>
        <div class="col-md-4">@Html.ValidationMessageFor(model => model.SecurityAnswer, "", new { @class = "text-danger" })</div>
    </div>
    <div class="row">
        <div class="col-md-12">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col-md-4">@Html.LabelFor(m => m.SecurityAnswerConfirm, new { @class = "control-label" })</div>
        <div class="col-md-4">@Html.PasswordFor(m => m.SecurityAnswerConfirm, new { @class = "form-control", autocomplete = "off", maxlength = 40 })</div>
        <div class="col-md-4">@Html.ValidationMessageFor(model => model.SecurityAnswerConfirm, "", new { @class = "text-danger" })</div>
    </div>
    <div class="row">
        <div class="col-md-12">&nbsp;</div>
    </div>
    if (Model.HasRecaptcha)
    {
        <div class="row">
            <div class="col-md-4">Enter the figures you see in the box shown</div>
            <div class="col-md-8">
                @Html.Partial("_Recaptcha");
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">&nbsp;</div>
        </div>
    }
    <div class="row">
        <div class="offset-md-10 col-md-2">
            <input id="submit" type="submit" class="btn btn-default btn btn-primary" value="Save Changes" />
        </div>
    </div>
}

@section Scripts {

}
